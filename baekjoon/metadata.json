{
  "problems": [
    {
      "id": "10808",
      "title": "알파벳 개수",
      "level": "Bronze 4",
      "tags": ["array", "string"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "2577",
      "title": "숫자의 개수",
      "level": "Bronze 2",
      "tags": ["array", "math"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "1475",
      "title": "방 번호",
      "level": "Silver 5",
      "tags": ["array"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "3273",
      "title": "두 수의 합",
      "level": "Silver 3",
      "tags": ["array", "sorting", "two pointers"],
      "problem": "Given an array $A$ and a value $t$, find the number of index pairs $(i, j)$ where $i\lt j$ and $A_i + A_j = t$.",
      "solution": [
        {
          "filename": "a.cpp",
          "language": "c++17",
          "algorithm": "Use two pointers on the sorted array. Decrement the right index if the sum is greater than the target, else increment the left index.",
          "tags": ["sorting", "two pointers"]
        }
      ]
    },
    {
      "id": "10807",
      "title": "개수 세기",
      "level": "Bronze 5",
      "tags": ["array"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "13300",
      "title": "방 배정",
      "level": "Bronze 2",
      "tags": ["array"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "11328",
      "title": "Strfry",
      "level": "Bronze 2",
      "tags": ["array", "string"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "1919",
      "title": "애너그램 만들기",
      "level": "Bronze 2",
      "tags": ["array", "string"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "1406",
      "title": "에디터",
      "level": "Silver 2",
      "tags": ["stack", "deque", "linked list"],
      "problem": "Given an initial string $S$, find the modified output string $S'$ after applying $N$ commands on a cursor that either moves left or right, appends a character to the left, or deletes a character on the left.",
      "solution": [
        {
          "filename": "a.cpp",
          "language": "c++17",
          "algorithm": "Have two deques, the cursor's location is between the left deque's back and the right deque's front.",
          "tags": ["deque"]
        }
      ]
    },
    {
      "id": "5397",
      "title": "키로거",
      "level": "Silver 2",
      "tags": ["stack", "deque", "linked list"],
      "related": ["1406"],
      "solution": [
        { "filename": "a.cpp", "language": "c++17", "tags": ["deque"] }
      ]
    },
    {
      "id": "1158",
      "title": "요세푸스 문제",
      "level": "Silver 4",
      "tags": ["queue", "brute force"],
      "problem": "Given $N$ and $K$, find $J(N, K)$ where $J$ denotes the sequence in which people are eliminated in the Josephus problem.",
      "solution": [
        {
          "filename": "a.cpp",
          "language": "c++17",
          "algorithm": "Manually push and pop elements from a queue, simulating the Josephus problem.",
          "tags": ["queue", "brute force"]
        }
      ]
    },
    {
      "id": "10828",
      "title": "스택",
      "level": "Silver 4",
      "tags": ["stack"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "10773",
      "title": "제로",
      "level": "Silver 4",
      "tags": ["stack"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "1874",
      "title": "스택 수열",
      "level": "Silver 2",
      "tags": ["stack"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "2493",
      "title": "탑",
      "level": "Gold 5",
      "tags": ["stack", "monotonic stack"],
      "problem": "Given an array $A_{1:n}$, find the previous greater element for each element $A_i$.",
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "17298",
      "title": "오큰수",
      "level": "Gold 4",
      "tags": ["stack", "monotonic stack"],
      "problem": "Given an array $A_{1:n}$, find the next greater element for each element $A_i$.",
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "6198",
      "title": "옥상 정원 꾸미기",
      "level": "Gold 5",
      "tags": ["stack", "monotonic stack"],
      "problem": "Given an array $A_{1:n}$, find the number of elements smaller than $A_i$ within $[i + 1, n]$ for each element $A_i$.",
      "solution": [
        {
          "filename": "a.cpp",
          "language": "c++17",
          "algorithm": "Let the number of elements smaller than $A_i$ within $[i + 1, n]$ be $f$. Use a monotonically decreasing stack starting from the end, then $f(A_i)$ is the sum of $f(A_k)$ where $k$ is the popped (elements smaller than $A_i$) element."
        }
      ]
    },
    {
      "id": "10845",
      "title": "큐",
      "level": "Silver 4",
      "tags": ["queue"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "18258",
      "title": "큐 2",
      "level": "Silver 4",
      "tags": ["queue"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "2164",
      "title": "카드2",
      "level": "Silver 4",
      "tags": ["queue"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "10866",
      "title": "덱",
      "level": "Silver 4",
      "tags": ["deque"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "1021",
      "title": "회전하는 큐",
      "level": "Silver 3",
      "tags": ["deque"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "3015",
      "title": "오아시스 재결합",
      "level": "Platinum 5",
      "tags": ["stack", "monotonic stack"],
      "problem": "Given an array $A_{1:n}$, find the number of pairs $(i, j)$ where no element in $A$ between $A_i$ and $A_j$ is greater than $A_i$ or $A_j$.",
      "solution": [
        {
          "filename": "a.cpp",
          "language": "c++17",
          "algorithm": "We use a monotonically decreasing stack and count the number of pops for each element inserted, since the popped elements indicate elements reachable from the current element. Duplicate elements have to be considered, therefore the stack keeps track of the number of duplicates for each element."
        }
      ]
    },
    {
      "id": "5430",
      "title": "AC",
      "level": "Gold 5",
      "tags": ["parsing", "deque"],
      "problem": "Given an array $A_{1:n}$ and a sequence of operations that either reverses the array or removes the first element of the array, find the resulting array after applying the sequence of operations to the array.",
      "solution": [
        {
          "filename": "a.cpp",
          "language": "c++17",
          "algorithm": "Push all the elements of the array inside a deque and keep track of whether or not the array is reversed. The $D$ operation will pop from the front or back of the deque depending on if the array is reversed or not."
        }
      ]
    },
    {
      "id": "4949",
      "title": "균형잡힌 세상",
      "level": "Silver 4",
      "tags": ["stack"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    },
    {
      "id": "7576",
      "title": "토마토",
      "level": "Gold 5",
      "tags": ["bfs"],
      "solution": [{ "filename": "a.cpp", "language": "c++17" }]
    }
  ]
}
